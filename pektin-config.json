{
    "services": {
        "server": {
            "enabled": true,
            "logging": "main,pektin_server",
            "build": {
                "enabled": false,
                "path": "/home/paul/Documents/pektin/pektin-server",
                "dockerfile": "dev.Dockerfile"
            }
        },
        "ui": {
            "enabled": true,
            "domain": "pektin.club",
            "subDomain": "ui",
            "build": {
                "enabled": false,
                "path": "/home/paul/Documents/pektin/pektin-ui",
                "dockerfile": "Dockerfile"
            }
        },
        "api": {
            "domain": "pektin.club",
            "subDomain": "api",
            "logging": "main,pektin_api",
            "perimeterAuth": false,
            "build": {
                "enabled": false,
                "path": "/home/paul/Documents/pektin/pektin-api",
                "dockerfile": "dev.Dockerfile"
            }
        },
        "vault": {
            "domain": "pektin.club",
            "subDomain": "vault",
            "perimeterAuth": false,
            "build": {
                "enabled": false,
                "path": "",
                "dockerfile": "Dockerfile"
            }
        },
        "tnt": {
            "enabled": true,
            "domain": "pektin.club",
            "subDomain": "tnt",
            "build": {
                "enabled": false,
                "path": "/home/paul/Documents/pektin/pektin-tnt",
                "dockerfile": "Dockerfile"
            }
        },
        "ribston": {
            "enabled": true,
            "build": {
                "enabled": false,
                "path": "/home/paul/Documents/pektin/pektin-ribston",
                "dockerfile": "Dockerfile"
            }
        },
        "opa": {
            "enabled": false,
            "build": {
                "enabled": false,
                "path": "",
                "dockerfile": "Dockerfile"
            }
        }
    },
    "nodes": [
        {
            "main": true,
            "name": "pektin",
            "ansible": {
                "configType": "hetzner",
                "floatingIp": false,
                "floatingLegacyIp": false,
                "serverType": "cpx31"
            }
        },
        {
            "name": "pektin2",
            "ansible": {
                "configType": "hetzner",
                "floatingIp": false,
                "floatingLegacyIp": false,
                "serverType": "cpx31"
            },
            "setup": {
                "system": "ubuntu",
                "root": {
                    "disableSystemdResolved": true,
                    "installDocker": true
                },
                "cloneRepo": true,
                "setup": true,
                "start": true
            }
        }
    ],
    "nameservers": [
        {
            "subDomain": "max",
            "domain": "pektin.club",
            "node": "pektin",
            "main": true
        },
        {
            "subDomain": "paul",
            "domain": "pektin.club",
            "node": "pektin2"
        }
    ],
    "letsencrypt": {
        "enabled": true,
        "letsencryptEmail": "test@pektin.club"
    },
    "usePolicies": "ribston",

    "reverseProxy": {
        "createTraefik": true,
        "routing": "domain",
        "tls": false,
        "tempZone": {
            "enabled": true,
            "provider": "pektin.zone",
            "routing": "local"
        },
        "traefikUi": {
            "enabled": true,
            "domain": "pektin.club",
            "subDomain": "traefik"
        },
        "external": {
            "domain": "pektin.club",
            "subDomain": "pektin-proxy",
            "enabled": true,
            "services": [
                {
                    "name": "gandi",
                    "enabled": true,
                    "domain": "api.gandi.net",
                    "accessControlAllowMethods": ["OPTIONS", "POST", "GET", "DELETE"]
                },
                {
                    "name": "crt",
                    "enabled": true,
                    "domain": "crt.sh",
                    "accessControlAllowMethods": ["OPTIONS", "GET"]
                }
            ]
        }
    },
    "ansible": {
        "sshPubKeyName": "paul@blackbox"
    }
}
