- name: create a server
  register: server_result
  hcloud_server:
      api_token: "{{ token }}"
      name: "{{ item.name }}"
      server_type: "{{ item.ansible.serverType | default('cx11') }}"
      image: ubuntu-20.04
      labels:
          project: "pektin"
          group: "{{ 'main' if item.main is defined and item.main==true else 'sub' }}"
      location: "{{ item.ansible.location | default('nbg1') }}"
      ssh_keys:
          - "pektin"
          - "{{ pektin_config.ansible.sshPubKeyName }}"
      state: present

- name: create a floating ip
  register: ipv6_result
  when: item.ansible.floatingIp is defined and item.ansible.floatingIp == true
  hcloud_floating_ip:
      api_token: "{{ token }}"
      name: "{{ item.name }}"
      type: ipv6
      state: present
      server: "{{ item.name }}"

- name: create a floating ip
  register: ipv4_result
  when: item.ansible.floatingIp is defined and item.ansible.floatingLegacyIp == true
  hcloud_floating_ip:
      api_token: "{{ token }}"
      name: "{{ item.name }}"
      type: ipv4
      state: present
      server: "{{ item.name }}"

- local_action:
      module: copy
      content: "{{ ipv6_result }}"
      dest: "../.tmp/floating-ips/res/{{ item.name }}--ip.json"
- local_action:
      module: copy
      content: "{{ ipv4_result }}"
      dest: "../.tmp/floating-ips/res/{{ item.name }}--legacyIp.json"
- local_action:
      module: copy
      content: "{{ server_result }}"
      dest: "../.tmp/servers/res/{{ item.name }}--server.json"
